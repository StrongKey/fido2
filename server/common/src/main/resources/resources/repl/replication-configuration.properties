# /**
# * Copyright StrongAuth, Inc. All Rights Reserved.
# *
# * Use of this source code is governed by the GNU Lesser General Public License v2.1
# * The license can be found at https://github.com/StrongKey/fido2/blob/master/LICENSE
# */

# ***********************************************
# 8888888888 d8b                        888
# 888        Y8P                        888
# 888                                   888
# 8888888    888 888  888  .d88b.   .d88888
# 888        888 `Y8bd8P' d8P  Y8b d88" 888
# 888        888   X88K   88888888 888  888
# 888        888 .d8""8b. Y8b.     Y88b 888
# 888        888 888  888  "Y8888   "Y88888
# ***********************************************

#Installation directory of the strongkeylite software
replication.cfg.property.replicationhome=/usr/local/strongauth/replication

# JDBC Connection Pool JNDI name within Glassfish
replication.cfg.property.jdbc.jndiname=jdbc/strongkeylite

# ***********************************************
#  .d8888b.                    888                           d8b                   888      888
# d88P  Y88b                   888                           Y8P                   888      888
# 888    888                   888                                                 888      888
# 888        888  888 .d8888b  888888  .d88b.  88888b.d88b.  888 88888888  8888b.  88888b.  888  .d88b.
# 888        888  888 88K      888    d88""88b 888 "888 "88b 888    d88P      "88b 888 "88b 888 d8P  Y8b
# 888    888 888  888 "Y8888b. 888    888  888 888  888  888 888   d88P   .d888888 888  888 888 88888888
# Y88b  d88P Y88b 888      X88 Y88b.  Y88..88P 888  888  888 888  d88P    888  888 888 d88P 888 Y8b.
#  "Y8888P"   "Y88888  88888P'  "Y888  "Y88P"  888  888  888 888 88888888 "Y888888 88888P"  888  "Y8888
# ***********************************************

#Should session EJBs print passed in entity objects to logfiles
replication.cfg.property.debug.printentity=false
# Port where messaging publisher binds to replicate objects other other appliances
replication.cfg.property.messaging.pubport=7001
# Port where messaging service binds to receive acknowledgements from subscribers
replication.cfg.property.messaging.ackport=7002
# Port where messaging syncrhonizer connects to replicate objects left over
replication.cfg.property.messaging.synport=7003
# Whether the subscriber tries to auto resubscribe
replication.cfg.property.messaging.autoresubscribe=true
# The maximum number of helper threads to process replicated objects per node in the cluster. Total Helpers = messaging.helperthreads * number of other nodes
replication.cfg.property.messaging.helperthreads=10
# High water mark for ZeroMQ messaging service - messages in excess of HWM are discarded (but persisted in DB before being discarded)
replication.cfg.property.messaging.hwm=100000
# Number of I/O threads for ZeroMQ Socket
replication.cfg.property.messaging.iothreads=1
# When to start the Timer for the Messaging Connection keep-alive thread
replication.cfg.property.messaging.keepalive.startin=5
# Interval for Timer to publish dummy object to keep Connection alive - every minute
replication.cfg.property.messaging.keepalive.interval=60
# KeepAlive compatibility mode (options: legacy, standard)
replication.cfg.property.messaging.keepalive.compatibility=legacy
# The number of seconds to wait for a ZMQ service to change state
replication.cfg.property.messaging.statechange.waittime=15
# The type of modules installed on this appliance - SKCE, SAKA, or DPA
replication.cfg.property.messaging.type=SAKA
