package com.strongkey.skfs.messaging;

option java_package = "com.strongkey.skfs.messaging";
option java_outer_classname = "ZMQSKCEReplicationProtos";

/**
 * DOMAINS
 */

message Domains
{
    required int64              did = 1;
    required string             name = 2;
    required string             status = 3;
    required string             replication_status = 4;
    optional string             encryption_certificate = 5;
    optional string             encryption_certificate_uuid = 6;
    optional string             signing_certificate = 7;
    optional string             signing_certificate_uuid = 8;
    optional string             skce_signingdn = 9;
    optional string             skfe_appid = 10;
    optional string             notes = 11;
}


message FidoKeys
{
    required int64              sid = 1;
    required int64              did = 2;
    optional string             userid = 3;
    required string             username = 4;
    required int64              fkid = 5;
    required string             keyhandle = 6;
    required string             appid = 7;
    required string             publickey = 8;
    optional int64              transports = 9;
    optional int64              attsid = 10;
    optional int64              attdid = 11;
    optional int64              attcid = 12;
    required int64              counter = 13;
    optional string             fido_version = 14;
    optional string             fido_protocol = 15;
    optional string             aaguid = 16;
    optional string             registration_settings = 17;
    optional int64              registration_settings_version = 18;
    required int64              create_date = 19;
    required string             create_location = 20;
    optional int64              modify_date = 21;
    optional string             modify_location = 22;
    required string             status = 23;
    required string             signature_keytype = 24;
    optional string             signature = 25;
}

message FidoUsers
{
    required int64              sid = 1;
    required int64              did = 2;
    required string             username = 3;
    optional string             userdn = 4;
    required string             fido_keys_enabled = 5;
    required string             two_step_verification = 6;
    optional string             primary_email = 7;
    optional string             registered_emails = 8;
    optional string             primary_phone_number = 9;
    optional string             registered_phone_numbers = 10;
    optional string             two_step_target = 11;
    optional string             signature = 12;
    required string             status = 13;
}

message UserSessionInfo
{
    required string             username = 1;
    optional string             displayName = 2;
    optional string             rpName = 3;
    required string             nonce = 4;
    required string             appid = 5;
    required string             sessiontype = 6;
    required int64              creationdate = 7;
    required string             user_public_key = 8;
    optional int64              fkid = 9;
    optional int64              skid = 10;
    optional int64              sid = 11;
    optional string             sessionid = 12;
    required string             mapkey = 13;
    optional string             userid = 14;
    optional string             usericon = 15;
    optional string             fidopolicymapkey = 16;
    optional string             userVerificationReq = 17;
    optional string             attestationPreferance = 18;
}

/**
 * KEEPALIVE - Dummy object to keep ZMQ alive - no such table
 */

message KeepAlive
{
    required int64              dummy = 1;
}

/**
 * SERVERS
 */

message Servers
{
    required int64              sid = 1;
    required string             fqdn = 2;
    required string             status = 3;
    required string             replication_role = 4;
    required string             replication_status = 5;
    optional string             mask = 6;
    optional string             notes = 7;
}

/**
 * SERVER_DOMAINS
 */

message ServerDomains
{
    required int64              sid = 1;
    required int64              did = 2;
    required string             pseudo_number = 3;
    required string             status = 4;
    optional string             migrating_key = 5;
    optional string             notes = 6;
}

message AttestationCertificates
{
    required int64              sid = 1;
    required int64              did = 2;
    required int64              attcid = 3;
    optional int64              parent_sid = 4;
    optional int64              parent_did = 5;
    optional int64              parent_attcid = 6;
    required string             certificate = 7;
    required string             issuer_dn = 8;
    required string             subject_dn = 9;
    required string             serial_number = 10;
    optional string             signature = 11;
}

message FidoPolicies
{
    required int64              sid = 1;
    required int64              did = 2;
    required int64              pid = 3;
    required string             policy = 4;
    required string             status = 5;
    optional string             notes = 6;
    required int64              create_date = 7;
    optional int64              modify_date = 8;
    optional string             signature = 9;
}

/**
 * CONFIGURATIONS
 */

message Configurations
{
    required int64              did = 1;
    required string             config_key = 2;
    required string             config_value = 3;
    optional string             notes = 4;
}

/**
 * CONFIGURATIONS
 */

message Configurations
{
    required int64              did = 1;
    required string             config_key = 2;
    required string             config_value = 3;
    optional string             notes = 4;
}
