# /**
# * Copyright StrongAuth, Inc. All Rights Reserved.
# *
# * Use of this source code is governed by the GNU Lesser General Public License v2.1
# * The license can be found at https://github.com/StrongKey/fido2/blob/master/LICENSE
# */
# ***********************************************
#
#  888b    888          888
#  8888b   888          888
#  88888b  888          888
#  888Y88b 888  .d88b.  888888  .d88b.  .d8888b
#  888 Y88b888 d88""88b 888    d8P  Y8b 88K
#  888  Y88888 888  888 888    88888888 "Y8888b.
#  888   Y8888 Y88..88P Y88b.  Y8b.          X88
#  888    Y888  "Y88P"   "Y888  "Y8888   88888P'
#
# ***********************************************
# Centralized configuration properties for StrongKey CryptoEngine
#

## SKLES WSDL suffix
skfs.cfg.property.saka.encryption.wsdlsuffix=/strongkeyliteWAR/EncryptionService?wsdl


## Suffix to use for signing public-key-aliases
skfs.cfg.property.signsuffix=-SIGN

#
skfs.cfg.property.db.signature.rowlevel.add=true
skfs.cfg.property.db.signature.rowlevel.verify=true
skfs.cfg.property.db.keyhandle.encrypt=false
skfs.cfg.property.db.keyhandle.encrypt.saka.domainid=1

#Property to control where the FIDO related information gets stored
# options are Local or External
# Local - data is stored in the local db and the application is using the LDAP servlet
# External - client app is taking care of metadata and not using our ldap servlet
skfs.cfg.property.fido.usermetadata=Local

# property to determine if the fido_users table should be used or not.
skfs.cfg.property.fido.usermetadata.enabled=false
#
#
## property to determine if tld list has to be retrieved. Boolean value default to false
skfs.cfg.property.retrieve.tld=false

# property to determine if authentication web service should return a JWT
skfs.cfg.property.jwt.create=true

# Property to determine if the server allows an Admin to change username associated with registered fido keys
skfs.cfg.property.allow.changeusername=false

#
skfs.cfg.property.pkix.validate=true
skfs.cfg.property.pkix.validate.method=truststore
skfs.cfg.property.pkix.validate.default.truststore=/usr/local/strongkey/skce/etc/pkix-truststore.jceks
skfs.cfg.property.pkix.validate.default.truststore.password=changeit
#

############################## skfe configuration ##############################
#
# 8888888888 8888888 8888888b.   .d88888b.      8888888888                   d8b
# 888          888   888  "Y88b d88P" "Y88b     888                          Y8P
# 888          888   888    888 888     888     888
# 8888888      888   888    888 888     888     8888888    88888b.   .d88b.  888 88888b.   .d88b.
# 888          888   888    888 888     888     888        888 "88b d88P"88b 888 888 "88b d8P  Y8b
# 888          888   888    888 888     888     888        888  888 888  888 888 888  888 88888888
# 888          888   888  .d88P Y88b. .d88P     888        888  888 Y88b 888 888 888  888 Y8b.
# 888        8888888 8888888P"   "Y88888P"      8888888888 888  888  "Y88888 888 888  888  "Y8888
#                                                                        888
#                                                                   Y8b d88P
#                                                                    "Y88P"
#
############################## skfe configuration ##############################

# How frequently should the fido user session cleanup job run?
skfs.cfg.property.usersession.flush.frequency.seconds=5
# When the cleanup job runs, how much old should the fido user session map entry
# be for it to be deleted?
skfs.cfg.property.usersession.flush.cutofftime.seconds=30
# How frequently should the fido keys cleanup job run?
skfs.cfg.property.fidokeys.flush.frequency.seconds=5
# When the cleanup job runs, how much old should the fido keys map entry
# be for it to be deleted?
skfs.cfg.property.fidokeys.flush.cutofftime.seconds=30
# How frequently should the fido user registered key random ids cleanup job run?
skfs.cfg.property.userkeypointers.flush.frequency.seconds=5
# When the cleanup job runs, how much old should the user registered key random
# ids map entry be for it to be deleted?
skfs.cfg.property.userkeypointers.flush.cutofftime.seconds=300
# Is this skce enterprise application being run locally just for demonstration
# purposes OR is it being run in a production environment with a fido backend
# application to handle the the database?
# Valid options are true (for local demo run) or false (for a production scenario)
# If it is a local demo case, there is a local javadb being used as a database
# and if it is a production run, the database is being taken care of by a backend
# application.
skfs.cfg.property.runtime.localdemo=true
# URL for the application identity file that lists the facets allowed to communicate
# with this fido server.
skfs.cfg.property.1.applicationid=https://fidodemo.strongauth.com/app.json
# entrophy length to be used while generating nonce for fido registraiton and
# authentication
skfs.cfg.property.entropylength=512

skfs.cfg.property.fido.userid.length=32

## Number of records to batch before committing to database
skfs.cfg.property.jdbc.dbcommitsize=200
## Number of rows to fetch when retrieving records for batch jobs
skfs.cfg.property.jdbc.dbfetchsize=500
## Number of records to process within a single batch iteration
skfs.cfg.property.jdbc.dbprocesssize=10000
## JDBC Connection Pool JNDI name within Glassfish
skfs.cfg.property.jdbc.jndiname=jdbc/strongkeylite

# Determines if all tables are replicated or just hashmaps
skfs.cfg.property.replicate.hashmapsonly=false

## The amount of time (in seconds) a record must be in the Replication table before Backlog Processor picks it up
skfs.cfg.property.messaging.timediff=60
## The amount of time (ms) the BacklogProcessor must sleep when there are no objects back-logged for replication
skfs.cfg.property.messaging.blpsleeptime=60

#Property which determines if the deployment is a standalone FE or part of an enterprise SAKA
skfs.cfg.property.standalone.fidoengine=true
#Password for the signing keystore in the stand alone SKFS
skfs.cfg.property.standalone.signingkeystore.password=Abcd1234!
#Password for the hmac credentials keystore in the stand alone SKFS
skfs.cfg.property.standalone.hmackeystore.password=Abcd1234!

########################## JUnit testing configuration ##########################
#
#   888888 888     888          d8b 888        88888888888                888
#     "88b 888     888          Y8P 888            888                    888
#      888 888     888              888            888                    888
#      888 888     888 88888b.  888 888888         888   .d88b.  .d8888b  888888 .d8888b
#      888 888     888 888 "88b 888 888            888  d8P  Y8b 88K      888    88K
#      888 888     888 888  888 888 888            888  88888888 "Y8888b. 888    "Y8888b.
#      88P Y88b. .d88P 888  888 888 Y88b.          888  Y8b.          X88 Y88b.       X88
#      888  "Y88888P"  888  888 888  "Y888         888   "Y8888   88888P'  "Y888  88888P'
#    .d88P
#  .d88P"
# 888P"
#
########################## JUnit testing configuration ##########################

## The properties below are used only by the junit tests
## host urls where the skce application is running for junit testing
# StrongKey Encryption Engine (skee) SOAP WSDL url
skfs.cfg.property.junit.skee.url.soap=https://fidodemo.strongauth.com/skee/SKEEServlet?wsdl
# StrongKey Signing Engine (skse) SOAP WSDL url
skfs.cfg.property.junit.skse.url.soap=https://fidodemo.strongauth.com/skse/SKSEServlet?wsdl
# Lightweight Directory Access Protocol Engine (ldape) SOAP WSDL url
skfs.cfg.property.junit.ldape.url.soap=https://fidodemo.strongauth.com/ldape/LDAPEServlet?wsdl
# StrongKey Fido Engine (skfe) SOAP WSDL url
skfs.cfg.property.junit.skfe.url.soap=https://fidodemo.strongauth.com/skfe/soap?wsdl
# StrongKey Fido Engine (skfe) REST url
skfs.cfg.property.junit.skfe.url.rest=https://fidodemo.strongauth.com/skfe/rest
# test user name (present in LDAP) to test fido functionality through junits
skfs.cfg.property.junit.skfe.testuser=fidotestuser

#MDS
# Property that enables MDS download
skfs.cfg.property.mds.enabled=true

skfs.cfg.property.mds.allow.missingentry=true

skfs.cfg.property.mds.url=https://mds.fidoalliance.org/

skfs.cfg.property.mds.rootca.url=http://secure.globalsign.com/cacert/root-r3.crt

############################### Fixed properties ###############################
#
# 8888888888 d8b                        888
# 888        Y8P                        888
# 888                                   888
# 8888888    888 888  888  .d88b.   .d88888
# 888        888 `Y8bd8P' d8P  Y8b d88" 888
# 888        888   X88K   88888888 888  888
# 888        888 .d8""8b. Y8b.     Y88b 888
# 888        888 888  888  "Y8888   "Y88888
#
############################### Fixed properties ###############################

# Installation directory of the skcengine software
skfs.cfg.property.skfshome=/usr/local/strongkey/skfs

#################################### FIDO2 #####################################
#
# 8888888888 8888888 8888888b.   .d88888b.   .d8888b.
# 888          888   888  "Y88b d88P" "Y88b d88P  Y88b
# 888          888   888    888 888     888        888
# 8888888      888   888    888 888     888      .d88P
# 888          888   888    888 888     888  .od888P"
# 888          888   888    888 888     888 d88P"
# 888          888   888  .d88P Y88b. .d88P 888"
# 888        8888888 8888888P"   "Y88888P"  888888888
#
#################################### FIDO2 #####################################
skfs.cfg.property.fido2.user.settings.version=1

# Property indicating whether fake keyhandles should be sent back to the calling
# application when they request preauthentication for unregistered users.
# Default value : FALSE
# Accepted Values : TRUE | FALSE
skfs.cfg.property.fido2.user.sendfakeKH=false


# v1 properties being added back
# entrophy length to be used while generating nonce for fido registraiton and
# authentication
skfs.cfg.property.entropylength=512
skfs.cfg.property.db.keyhandle.encrypt=false
skfs.cfg.property.db.keyhandle.encrypt.saka.domainid=1
skfs.cfg.property.saka.encryption.wsdlsuffix=/strongkeyliteWAR/EncryptionService?wsdl

skfs.cfg.property.fido2.service.defaultuser=svcfidouser
skfs.cfg.property.fido2.service.defaultpassword=Abcd1234!
