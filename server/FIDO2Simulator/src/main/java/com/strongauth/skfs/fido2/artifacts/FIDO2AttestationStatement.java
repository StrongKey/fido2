/**
* Copyright StrongAuth, Inc. All Rights Reserved.
*
* Use of this source code is governed by the GNU Lesser General Public License v2.1
* The license can be found at https://github.com/StrongKey/fido2/blob/master/LICENSE
*
 * **********************************************
 *
 *  888b    888          888
 *  8888b   888          888
 *  88888b  888          888
 *  888Y88b 888  .d88b.  888888  .d88b.  .d8888b
 *  888 Y88b888 d88""88b 888    d8P  Y8b 88K
 *  888  Y88888 888  888 888    88888888 "Y8888b.
 *  888   Y8888 Y88..88P Y88b.  Y8b.          X88
 *  888    Y888  "Y88P"   "Y888  "Y8888   88888P'
 *
 * **********************************************
 *
 * An interface to support different types of attestation statements emanating
 * from the FIDO2 Authenticator. Currently, only the "packed" attestation
 * statement type is supported within this simulator.
 */

package com.strongauth.skfs.fido2.artifacts;

import java.security.PrivateKey;

public interface FIDO2AttestationStatement {

    // Return the algorithm used in the attestation signature
    public long getAlg();

    // Return the X.509 Certificate of the attestation certificate
    public byte[] getX5c();

    // Return the type of attestation implemented in this class
    public String getAttestationType();

    // Digitally sign the attestation statement with the private-key of
    // the attestation certificate
    public byte[] signwithAttestationKey(byte[] tbs);

    // Digitally sign the attestation statement with the private-key of
    // the user just generated by the authenticator - a "self-signed"
    // attestation of the user's key (perhaps of dubious value?)
    public byte[] signwithCredentialKey(PrivateKey pvtKey, byte[] tbs);
}
